#!/bin/sh
# The 'github.com/thameera/vimv' script but rewritten in sh.

set -e

error () { printf "%s: %s\n" "${0##*/}" "$1" >&2; exit 1; }

case $# in
    0)
        exec "$0" *
        ;;
    1)
        [ \* = "$1" -a ! -e \* ] && error "current directory is empty"
        [ -e "$1" ] || error "$1: no such file or directory"
        ;;
    *)
        for pathname in "$@"; do
            [ -e "$pathname" ] || error "$pathname: no such file or directory"
        done
esac

IFS=' '
case "$*" in
    *'
'*) error "argument(s) contains a newline" ;;
esac

pathnames="${TMPDIR:-/tmp}/${0##*/}.$$"
trap 'rm -f "$pathnames"' EXIT

printf "%s\n" "$@" > "$pathnames"
${EDITOR:-vi} "$pathnames"

pathnames_in=$# pathnames_out=0
while read -r output; do
    pathnames_out="$(($pathnames_out + 1))"
done < "$pathnames"

[ "$pathnames_in" -eq "$pathnames_out" ] || error "added/deleted lines"

renamed_pathnames=0
while read -r output; do
    if [ "$1" != "$output" ]; then
        set -- "$@" "$1" "$output"
        renamed_pathnames="$(($renamed_pathnames + 1))"
    fi
    shift 1
done < "$pathnames"

[ "$renamed_pathnames" -ne 0 ] || error "no filenames were changed"

until [ $# -eq 0 ]; do
    case "$2" in
        */*) [ -d "${2%/*}" ] || mkdir -p "${2%/*}" ;;
    esac
    mv -- "$1" "$2"
    shift 2
done

printf "%s file(s) renamed.\n" "$renamed_pathnames"
