#!/bin/sh

unset IFS
IFS=" 	${IFS-
}"

chroot_add_mount()
{
    mount "$@" && CHROOT_ACTIVE_MOUNTS="\"$2\"${CHROOT_ACTIVE_MOUNTS:+ $CHROOT_ACTIVE_MOUNTS}"
}

chroot_setup()
{
    unset CHROOT_ACTIVE_MOUNTS

    trap 'chroot_teardown' EXIT

    chroot_add_mount proc "$1/proc" -t proc -o nosuid,noexec,nodev || return 1
    chroot_add_mount sys "$1/sys" -t sysfs -o nosuid,noexec,nodev,ro || return 1

    if test -d "efivarfs/sys/firmware/efi/efivars"; then
        chroot_add_mount efivarfs "$1/sys/firmware/efi/efivars" -t efivarfs -o nosuid,noexec,nodev 2> /dev/null
    fi

    chroot_add_mount udev "$1/dev" -t devtmpfs -o mode=0755,nosuid || return 1
    chroot_add_mount devpts "$1/dev/pts" -t devpts -o mode=0620,gid=5,nosuid,noexec || return 1
    chroot_add_mount shm "$1/dev/shm" -t tmpfs -o mode=1777,nosuid,nodev || return 1
    chroot_add_mount run "$1/run" -t tmpfs -o nosuid,nodev,mode=0755 || return 1
    chroot_add_mount tmp "$1/tmp" -t tmpfs -o mode=1777,strictatime,nodev,nosuid || return 1
}

chroot_teardown()
{
    eval set -- $CHROOT_ACTIVE_MOUNTS
    test "$#" -gt 0 && umount "$@"
    unset CHROOT_ACTIVE_MOUNTS
}

chroot_add_resolv_conf()
{
    resolv_conf="$1/etc/resolv.conf"

    test -e "/etc/resolv.conf" || return 0

    if test -h "$chrootdir/etc/resolv.conf"; then
        resolv_conf=$(readlink "$chrootdir/etc/resolv.conf")
        case "$resolv_conf" in
            /*) resolv_conf="$chrootdir$resolv_conf" ;;
             *) resolv_conf="$chrootdir/etc/$resolv_conf" ;;
        esac

        if ! test -f "$resolv_conf"; then
            install -Dm644 "/dev/null" "$resolv_conf" || return 1
        fi
    elif ! test -e "$chrootdir/etc/resolv.conf"; then
        return 0
    fi

    chroot_add_mount /etc/resolv.conf "$resolv_conf" --bind
}

die()
{
    printf "$@" 1>&2
    exit 1
}

unset userspec
while getopts ':u:' option; do
  case $option in
    u) userspec="$OPTARG" ;;
    :) die "%s: option requires an argument -- %c\n" "${0##*/}" "$OPTARG" ;;
    ?) die "%s: illegal option -- %c\n" "${0##*/}" "$OPTARG" ;;
  esac
done
shift $((OPTIND - 1))

euid="$(id -u 2> /dev/null)" || die "Unable to determine effective user id\n"
test "$euid" -eq 0 || die "This script must be run with root privileges\n"
test "$#" -gt 0 || die "No chroot directory specified\n"

chrootdir="$1"

if ! mountpoint -q "$chrootdir"; then
    printf "WARNING: %s is not a mountpoint. This may have undesirable side effects.\n" "$chrootdir" 1>&2
fi

chroot_setup "$chrootdir" || die "failed to setup chroot %s\n" "$chrootdir"
chroot_add_resolv_conf "$chrootdir" || die "failed to setup resolv.conf\n"

if test -n "$userspec"; then
    SHELL=/bin/bash unshare --fork --pid chroot --userspec "$userspec" -- "$@"
else
    SHELL=/bin/bash unshare --fork --pid chroot -- "$@"
fi
